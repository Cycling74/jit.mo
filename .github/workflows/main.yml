name: CI

on: [push, pull_request]

jobs:
  package:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        config: [debug, release]

    steps:
    - uses: actions/checkout@v2

    - name: configure_macos
      if: matrix.os == 'macos-latest'
      run: mkdir build && cd build && cmake -G Xcode ..
 
    - name: configure_windows
      if: matrix.os == 'windows-latest'
      run: mkdir build && cd build && cmake ..

    - name: build_debug
      if: matrix.config == 'debug'
      run: cmake --build build --config 'Debug'

    - name: build_release
      if: matrix.config == 'release'
      run: cmake --build build --config 'Release'

    - name: test
      run: cd build && ctest -C ${{ matrix.config }} . -V

    - name: package_macos
      if: matrix.os == 'macos-latest'
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_CONFIG: ${{ matrix.config }}  
      run: |
        PACKAGE_NAME=`echo $GITHUB_REPOSITORY | sed 's/.*\///g'`
        PACKAGE_REV=`echo $GITHUB_SHA | sed -e 's/^[[:alnum:]]\{7\}/&-/g' | sed 's/-.*//'`
        PACKAGE_CONFIG=`echo $GITHUB_CONFIG`
        mkdir $PACKAGE_NAME
        if [ -e package-info.json ]; then cp package-info.json $PACKAGE_NAME; fi
        for f in *.md; do [ -e "$f" ] && cp "$f" $PACKAGE_NAME ; done
        if [ -e icon.png ]; then cp icon.png $PACKAGE_NAME; fi
        if [ -e CMakeLists.txt ]; then cp CMakeLists.txt $PACKAGE_NAME; fi
        if [ -d code ]; then cp -r code $PACKAGE_NAME; fi
        if [ -d docs ]; then cp -r docs $PACKAGE_NAME; fi
        if [ -d examples ]; then cp -r examples $PACKAGE_NAME; fi
        if [ -d extensions ]; then cp -r extensions $PACKAGE_NAME; fi
        if [ -d externals ]; then cp -r externals $PACKAGE_NAME; fi
        if [ -d extras ]; then cp -r extras $PACKAGE_NAME; fi
        if [ -d help ]; then cp -r help $PACKAGE_NAME; fi
        if [ -d init ]; then cp -r init $PACKAGE_NAME; fi
        if [ -d java-classes ]; then cp -r java-classes $PACKAGE_NAME; fi
        if [ -d java-doc ]; then cp -r java-doc $PACKAGE_NAME; fi
        if [ -d javascript ]; then cp -r javascript $PACKAGE_NAME; fi
        if [ -d jsui ]; then cp -r jsui $PACKAGE_NAME; fi
        if [ -d media ]; then cp -r media $PACKAGE_NAME; fi
        if [ -d misc ]; then cp -r misc $PACKAGE_NAME; fi
        if [ -d patchers ]; then cp -r patchers $PACKAGE_NAME; fi
        if [ -d support ]; then cp -r support $PACKAGE_NAME; fi
        if [ -d source ]; then cp -r source $PACKAGE_NAME; fi
        if [ -d tests ]; then cp -r tests $PACKAGE_NAME; fi
        if [ -e $PACKAGE_NAME/ReadMe-Public.md ]; then rm -f $PACKAGE_NAME/ReadMe.md; mv $PACKAGE_NAME/ReadMe-Public.md $PACKAGE_NAME/ReadMe.md; fi
        mkdir dist
        zip -r dist/$PACKAGE_NAME-mac-$PACKAGE_REV-$PACKAGE_CONFIG.zip $PACKAGE_NAME

    - name: package_windows
      if: matrix.os == 'windows-latest'
      shell: cmd
      env:
        GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_CONFIG: ${{ matrix.config }}
      run: |
        set PACKAGE_NAME=%GITHUB_REPOSITORY_NAME%
        set PACKAGE_REV=%GITHUB_SHA:~0,7%
        set PACKAGE_CONFIG=%GITHUB_CONFIG%
        echo PACKAGE_NAME: %PACKAGE_NAME%
        echo PACKAGE_REV: %PACKAGE_REV%
        echo PACKAGE_CONFIG: %GITHUB_CONFIG%
        mkdir %PACKAGE_NAME%
        cp package-info.json %PACKAGE_NAME%
        cp License.md %PACKAGE_NAME%
        cp ReadMe.md %PACKAGE_NAME%
        cp icon.png %PACKAGE_NAME%
        cp CMakeLists.txt %PACKAGE_NAME%
        if exist code cp -r code %PACKAGE_NAME%
        if exist docs cp -r docs %PACKAGE_NAME%
        if exist examples cp -r examples %PACKAGE_NAME%
        if exist extensions cp -r extensions %PACKAGE_NAME%
        if exist externals cp -r externals %PACKAGE_NAME%
        if exist extras cp -r extras %PACKAGE_NAME%
        if exist help cp -r help %PACKAGE_NAME%
        if exist init cp -r init %PACKAGE_NAME%
        if exist java-classes cp -r java-classes %PACKAGE_NAME%
        if exist java-doc cp -r java-doc %PACKAGE_NAME%
        if exist javascript cp -r javascript %PACKAGE_NAME
        if exist jsui cp -r jsui %PACKAGE_NAME%
        if exist media cp -r media %PACKAGE_NAME%
        if exist misc cp -r misc %PACKAGE_NAME%
        if exist patchers cp -r patchers %PACKAGE_NAME%
        if exist support cp -r support %PACKAGE_NAME%
        if exist source cp -r source %PACKAGE_NAME%
        if exist tests cp -r tests %PACKAGE_NAME%
        if exist ReadMe-Public.md cp ReadMe-Public.md %PACKAGE_NAME%/ReadMe.md
        mkdir dist
        7z a dist/%PACKAGE_NAME%-win-%PACKAGE_REV%-%PACKAGE_CONFIG%.zip %PACKAGE_NAME%

    - name: upload
      uses: shallwefootball/s3-upload-action@v1.0.1
      with:
        aws_key_id: ${{ secrets.S3_ID }}
        aws_secret_access_key: ${{ secrets.S3_KEY }}
        aws_bucket: cycling74-ci-public
        source_dir: 'dist'
